@page "/Entry"
@using SchwammyStreams.TeamFeedback.Shared
@using Microsoft.Extensions.Logging
@inject ILogger<Entry> Logger

<h3>Provide Feedback:</h3>

<EditForm Model="@feedbackInput" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        Which Team are you providing feedback for:
        <InputSelect id="team" @bind-Value="feedbackInput.TeamId">
            <option>Please Choose</option>
            <option value="1">Team A</option>
            <option value="2">Team B</option>
        </InputSelect>
    </div>

    <div>
        What is the end date of the sprint?
        <InputDate id="startDate" @bind-Value="feedbackInput.SprintEnd"></InputDate>
    </div>

    <div>
        Did things go well this sprint?
        <InputSelect id="wentWell" @bind-Value="feedbackInput.ThingsWentWell">
            <option>Please Choose</option>
            <option value="yes">Yes</option>
            <option value="no">No</option>
        </InputSelect>
    </div>
    <div>
        Did things go better than last?
        <InputSelect id="wentWell" @bind-Value="feedbackInput.IsBetterThanLast">
            <option>Please Choose</option>
            <option value="yes">Yes</option>
            <option value="no">No</option>
        </InputSelect>
    </div>
    <button type="submit">Submit</button>
</EditForm>

@code {
    private FeedbackEntry feedbackInput = new();



    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        // Process the valid form

        // call webapi
        //httpClient.bla bla bla
    }
}